# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


-- Top 10 Most popular Artists 
-- Get average popularity of each artist, ordered from most to least popular
SELECT artist_name, AVG(popularity) AS avg_popularity
FROM spotify_data
GROUP BY artist_name
ORDER BY avg_popularity DESC
LIMIT 10;

--Track with the highest danceability
-- Find the track with the highest danceability score
SELECT artist_name, track_name, danceability
FROM spotify_data
ORDER BY danceability DESC
LIMIT 1;

--All Songs Ordered by Tempo (Ascending)
-- List all songs sorted by tempo in ascending order (slowest to fastest)
SELECT artist_name, track_name, tempo
FROM spotify_data
ORDER BY tempo ASC;

--Artists Ordered by Average Popularity (Descending)
-- Show average popularity for each artist, ordered from highest to lowest
SELECT artist_name, AVG(popularity) AS avg_popularity
FROM spotify_data
GROUP BY artist_name
ORDER BY avg_popularity DESC;

-- Average Danceability by Artist and Track
-- Calculate average danceability per artist and track
SELECT artist_name, track_name, AVG(danceability) AS avg_danceability
FROM spotify_data
GROUP BY artist_name, track_name;

--Artist with the Longest Song
-- Get the track with the longest duration in milliseconds
SELECT artist_name, track_name, duration_ms
FROM spotify_data
ORDER BY duration_ms DESC
LIMIT 1;

--Average Danceability of the 10 Most Popular Songs
-- Calculate average danceability for the top 10 most popular songs
SELECT AVG(danceability) AS avg_danceability_top10
FROM (
    SELECT danceability
    FROM spotify_data
    ORDER BY popularity DESC
    LIMIT 10
) AS top10;

--Top 5 Most Energetic Tracks
---- Find the 5 tracks with the highest energy levels
SELECT artist_name, track_name, energy
FROM spotify_data
ORDER BY energy DESC
LIMIT 5;

--Tracks with the Highest Valence (Happiest Songs)
-- Show top 5 songs with the highest valence (positivity/happiness)
SELECT artist_name, track_name, valence
FROM spotify_data
ORDER BY valence DESC
LIMIT 5;

--Most Danceable Songs with Popularity Above 90
-- Get highly popular songs (popularity > 90) sorted by danceability
SELECT artist_name, track_name, popularity, danceability
FROM spotify_data
WHERE popularity > 90
ORDER BY danceability DESC;
